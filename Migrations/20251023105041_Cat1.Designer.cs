// <auto-generated />
using System;
using Catblog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catblog.Migrations
{
    [DbContext(typeof(AdminCatContext))]
    [Migration("20251023105041_Cat1")]
    partial class Cat1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catblog.Domain.FileToDatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminCatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileToDatabase");
                });

            modelBuilder.Entity("Catblog.Domain.Kitty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminCatAge")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminCatRate")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatSpecies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("kittyCreateViewModelAdminCatId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("kittyCreateViewModelAdminCatId");

                    b.ToTable("Kitty", (string)null);
                });

            modelBuilder.Entity("Catblog.Models.Kittys.KittyCreateViewModel", b =>
                {
                    b.Property<Guid>("AdminCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminCatAge")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminCatRate")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatSpecies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminCatId");

                    b.ToTable("KittyCreateViewModel");
                });

            modelBuilder.Entity("Catblog.Models.Kittys.KittyImageViewModel", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KittyCreateViewModelAdminCatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KittyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageID");

                    b.HasIndex("KittyCreateViewModelAdminCatId");

                    b.ToTable("KittyImageViewModel");
                });

            modelBuilder.Entity("Catblog.Domain.Kitty", b =>
                {
                    b.HasOne("Catblog.Models.Kittys.KittyCreateViewModel", "kittyCreateViewModel")
                        .WithMany()
                        .HasForeignKey("kittyCreateViewModelAdminCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kittyCreateViewModel");
                });

            modelBuilder.Entity("Catblog.Models.Kittys.KittyImageViewModel", b =>
                {
                    b.HasOne("Catblog.Models.Kittys.KittyCreateViewModel", null)
                        .WithMany("kittyImageViewModels")
                        .HasForeignKey("KittyCreateViewModelAdminCatId");
                });

            modelBuilder.Entity("Catblog.Models.Kittys.KittyCreateViewModel", b =>
                {
                    b.Navigation("kittyImageViewModels");
                });
#pragma warning restore 612, 618
        }
    }
}
