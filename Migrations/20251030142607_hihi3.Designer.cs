// <auto-generated />
using System;
using Catblog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catblog.Migrations
{
    [DbContext(typeof(AdminCatContext))]
    [Migration("20251030142607_hihi3")]
    partial class hihi3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catblog.Domain.FileToDatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminCatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminCatID");

                    b.ToTable("FileToDatabase", (string)null);
                });

            modelBuilder.Entity("Catblog.Domain.Kitty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminCatAge")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminCatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminCatRate")
                        .HasColumnType("int");

                    b.Property<string>("AdminCatSpecies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kitty", (string)null);
                });

            modelBuilder.Entity("Catblog.Dto.FileToDatabaseDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminCatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("KittyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KittyId");

                    b.ToTable("FileToDatabaseDto");
                });

            modelBuilder.Entity("Catblog.Domain.FileToDatabase", b =>
                {
                    b.HasOne("Catblog.Domain.Kitty", "Kitty")
                        .WithMany()
                        .HasForeignKey("AdminCatID");

                    b.Navigation("Kitty");
                });

            modelBuilder.Entity("Catblog.Dto.FileToDatabaseDto", b =>
                {
                    b.HasOne("Catblog.Domain.Kitty", null)
                        .WithMany("Image")
                        .HasForeignKey("KittyId");
                });

            modelBuilder.Entity("Catblog.Domain.Kitty", b =>
                {
                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
